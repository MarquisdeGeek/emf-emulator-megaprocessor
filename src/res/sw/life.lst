 1:    2 [0000]                          - // Start with shared definitions...
 2:    0 [0000]                          - include "Megaprocessor_defs.asm";
 2:    2 [0000]                          - // ===============================================================
 2:    3 [0000]                          - // 
 2:    4 [0000]                          - // Megaprocessor
 2:    5 [0000]                          - // =============
 2:    6 [0000]                          - // This file holds definitions useful for writing assembler
 2:    7 [0000]                          - // programs for the Megaprocessor.
 2:    8 [0000]                          - //
 2:    9 [0000]                          - // This version : 15th May 2016
 2:   10 [0000]                          - //
 2:   11 [0000]                          - // ================================================================
 2:   12 [0000]                          - //
 2:   13 [0000]                          - // Coding
 2:   14 [0000]                          - // =======
 2:   15 [0000]                          - // definition for interrupt enable bit
 2:   15 [0000]                          - PS_INT_ENABLE_BIT               equ     0x01;
 2:   17 [0000]                          - 
 2:   18 [0000]                          - // ================================================================
 2:   19 [0000]                          - //
 2:   20 [0000]                          - // To handle the 256 bytes of RAM built from discrete components:
 2:   20 [0000]                          - INT_RAM_START                   equ     0xA000;
 2:   21 [0000]                          - INT_RAM_LEN                     equ     0x0100;
 2:   23 [0000]                          - 
 2:   23 [0000]                          - INT_RAM_BYTES_ACROSS            equ     4;
 2:   24 [0000]                          - INT_RAM_BYTES_HEIGHT_AS_SHIFT   equ     6;
 2:   25 [0000]                          - INT_RAM_BYTES_HEIGHT            equ     64;// 1 << INT_RAM_BYTES_HEIGHT_AS_SHIFT
 2:   27 [0000]                          - 
 2:   28 [0000]                          - // ================================================================
 2:   29 [0000]                          - //
 2:   30 [0000]                          - // To handle the peripherals:
 2:   30 [0000]                          - PERIPHERALS_BASE                equ     0x8000;
 2:   31 [0000]                          - TIMER_BASE                      equ     PERIPHERALS_BASE + 0x00;
 2:   32 [0000]                          - UART_BASE                       equ     PERIPHERALS_BASE + 0x10;
 2:   33 [0000]                          - INTERRUPT_BASE                  equ     PERIPHERALS_BASE + 0x20;
 2:   34 [0000]                          - GEN_IO_BASE                     equ     PERIPHERALS_BASE + 0x30;
 2:   36 [0000]                          - 
 2:   37 [0000]                          - // register locations for the GPIO...
 2:   37 [0000]                          - GEN_IO_OUTPUT                   equ     GEN_IO_BASE + 0;
 2:   38 [0000]                          - GEN_IO_INPUT                    equ     GEN_IO_BASE + 2;
 2:   39 [0000]                          - GEN_IO_CTR                      equ     GEN_IO_BASE + 4;
 2:   41 [0000]                          - 
 2:   42 [0000]                          - // register locations for the Timer...
 2:   42 [0000]                          - TIME_BLK_COUNTER                equ     TIMER_BASE + 0x00;
 2:   43 [0000]                          - TIME_BLK_TIMER                  equ     TIMER_BASE + 0x02;
 2:   44 [0000]                          - TIME_BLK_TIMER_CTRL             equ     TIMER_BASE + 0x04;
 2:   46 [0000]                          - // bit definitions for timer control register
 2:   46 [0000]                          - TIME_BLK_TIMER_CTRL_EN_TIMER    equ     0x01;
 2:   47 [0000]                          - TIME_BLK_TIMER_CTRL_CLR_COUNT   equ     0x02;
 2:   48 [0000]                          - TIME_BLK_TIMER_CTRL_CLR_TIMER   equ     0x04;
 2:   50 [0000]                          - 
 2:   51 [0000]                          - // masks for selecting switch value on Venom Arcade Stick
 2:   52 [0000]                          - // (Switches are HIGH by "default", and go LOW on being pressed).
 2:   52 [0000]                          - IO_SWITCH_FLAG_UP               EQU     0x0001;
 2:   53 [0000]                          - IO_SWITCH_FLAG_DOWN             EQU     0x0002;
 2:   54 [0000]                          - IO_SWITCH_FLAG_LEFT             EQU     0x0004;
 2:   55 [0000]                          - IO_SWITCH_FLAG_RIGHT            EQU     0x0008;
 2:   56 [0000]                          - IO_SWITCH_FLAG_SQUARE           EQU     0x0010;
 2:   57 [0000]                          - IO_SWITCH_FLAG_TRIANGLE         EQU     0x0020;
 2:   58 [0000]                          - IO_SWITCH_FLAG_CIRCLE           EQU     0x0040;
 2:   59 [0000]                          - IO_SWITCH_FLAG_CROSS            EQU     0x0080;
 2:   60 [0000]                          - IO_SWITCH_FLAG_L1               EQU     0x0100;
 2:   61 [0000]                          - IO_SWITCH_FLAG_L2               EQU     0x0200;
 2:   62 [0000]                          - IO_SWITCH_FLAG_R1               EQU     0x0400;
 2:   63 [0000]                          - IO_SWITCH_FLAG_R2               EQU     0x0800;
 2:   65 [0000]                          - 
 2:   66 [0000]                          - // register locations for the Interrupt controller...
 2:   66 [0000]                          - INTERRUPT_SOURCE                EQU     INTERRUPT_BASE + 0x00;
 2:   67 [0000]                          - INTERRUPT_MASK                  EQU     INTERRUPT_BASE + 0x01;
 2:   69 [0000]                          - 
 2:   70 [0000]                          - // interrupt souurce enable/value bit masks
 2:   70 [0000]                          - INTERRUPT_BIT_USER              EQU     0x01;
 2:   71 [0000]                          - INTERRUPT_BIT_UART_SPACE        EQU     0x02;
 2:   72 [0000]                          - INTERRUPT_BIT_UART_RX_DATA      EQU     0x04;
 2:   73 [0000]                          - INTERRUPT_BIT_TIMER             EQU     0x08;
 2:   74 [0000]                          - INTERRUPT_BIT_COUNTER           EQU     0x10;
 2:   75 [0000]                          - INTERRUPT_BIT_INPUT_CHANGE      EQU     0x20;
                         - 
 1:    4 [0000]                          - 
 1:    5 [0000]                          - // *************************************
 1:    6 [0000]                          - // variables....
 1:    6 [4000]                          -         org 0x4000;
 1:    8 [4000]                          -         
 1:    9 [4000]                          - // We shall use two working arrays to hold two copies of our universe. The universe is 32 wide
 1:   10 [4000]                          - // by 64 tall. It is wraparound. To deal with the wraparound we shall replicate the outside edge
 1:   11 [4000]                          - // so our working arrays need to be 34 by 66.
 1:   11 [4000] 00 00 00 00 00 00 00 00  - world_a:    ds  34*66;
 1:   11 [4008] 00 00 00 00 00 00 00 00  - 
 1:   11 [4010] 00 00 00 00 00 00 00 00  - 
 1:   11 [4018] 00 00 00 00 00 00 00 00  - 
 1:   11 [4020] 00 00 00 00 00 00 00 00  - 
 1:   11 [4028] 00 00 00 00 00 00 00 00  - 
 1:   11 [4030] 00 00 00 00 00 00 00 00  - 
 1:   11 [4038] 00 00 00 00 00 00 00 00  - 
 1:   11 [4040] 00 00 00 00 00 00 00 00  - 
 1:   11 [4048] 00 00 00 00 00 00 00 00  - 
 1:   11 [4050] 00 00 00 00 00 00 00 00  - 
 1:   11 [4058] 00 00 00 00 00 00 00 00  - 
 1:   11 [4060] 00 00 00 00 00 00 00 00  - 
 1:   11 [4068] 00 00 00 00 00 00 00 00  - 
 1:   11 [4070] 00 00 00 00 00 00 00 00  - 
 1:   11 [4078] 00 00 00 00 00 00 00 00  - 
 1:   11 [4080] 00 00 00 00 00 00 00 00  - 
 1:   11 [4088] 00 00 00 00 00 00 00 00  - 
 1:   11 [4090] 00 00 00 00 00 00 00 00  - 
 1:   11 [4098] 00 00 00 00 00 00 00 00  - 
 1:   11 [40A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [40A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [40B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [40B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [40C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [40C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [40D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [40D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [40E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [40E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [40F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [40F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4100] 00 00 00 00 00 00 00 00  - 
 1:   11 [4108] 00 00 00 00 00 00 00 00  - 
 1:   11 [4110] 00 00 00 00 00 00 00 00  - 
 1:   11 [4118] 00 00 00 00 00 00 00 00  - 
 1:   11 [4120] 00 00 00 00 00 00 00 00  - 
 1:   11 [4128] 00 00 00 00 00 00 00 00  - 
 1:   11 [4130] 00 00 00 00 00 00 00 00  - 
 1:   11 [4138] 00 00 00 00 00 00 00 00  - 
 1:   11 [4140] 00 00 00 00 00 00 00 00  - 
 1:   11 [4148] 00 00 00 00 00 00 00 00  - 
 1:   11 [4150] 00 00 00 00 00 00 00 00  - 
 1:   11 [4158] 00 00 00 00 00 00 00 00  - 
 1:   11 [4160] 00 00 00 00 00 00 00 00  - 
 1:   11 [4168] 00 00 00 00 00 00 00 00  - 
 1:   11 [4170] 00 00 00 00 00 00 00 00  - 
 1:   11 [4178] 00 00 00 00 00 00 00 00  - 
 1:   11 [4180] 00 00 00 00 00 00 00 00  - 
 1:   11 [4188] 00 00 00 00 00 00 00 00  - 
 1:   11 [4190] 00 00 00 00 00 00 00 00  - 
 1:   11 [4198] 00 00 00 00 00 00 00 00  - 
 1:   11 [41A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [41A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [41B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [41B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [41C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [41C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [41D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [41D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [41E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [41E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [41F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [41F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4200] 00 00 00 00 00 00 00 00  - 
 1:   11 [4208] 00 00 00 00 00 00 00 00  - 
 1:   11 [4210] 00 00 00 00 00 00 00 00  - 
 1:   11 [4218] 00 00 00 00 00 00 00 00  - 
 1:   11 [4220] 00 00 00 00 00 00 00 00  - 
 1:   11 [4228] 00 00 00 00 00 00 00 00  - 
 1:   11 [4230] 00 00 00 00 00 00 00 00  - 
 1:   11 [4238] 00 00 00 00 00 00 00 00  - 
 1:   11 [4240] 00 00 00 00 00 00 00 00  - 
 1:   11 [4248] 00 00 00 00 00 00 00 00  - 
 1:   11 [4250] 00 00 00 00 00 00 00 00  - 
 1:   11 [4258] 00 00 00 00 00 00 00 00  - 
 1:   11 [4260] 00 00 00 00 00 00 00 00  - 
 1:   11 [4268] 00 00 00 00 00 00 00 00  - 
 1:   11 [4270] 00 00 00 00 00 00 00 00  - 
 1:   11 [4278] 00 00 00 00 00 00 00 00  - 
 1:   11 [4280] 00 00 00 00 00 00 00 00  - 
 1:   11 [4288] 00 00 00 00 00 00 00 00  - 
 1:   11 [4290] 00 00 00 00 00 00 00 00  - 
 1:   11 [4298] 00 00 00 00 00 00 00 00  - 
 1:   11 [42A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [42A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [42B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [42B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [42C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [42C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [42D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [42D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [42E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [42E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [42F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [42F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4300] 00 00 00 00 00 00 00 00  - 
 1:   11 [4308] 00 00 00 00 00 00 00 00  - 
 1:   11 [4310] 00 00 00 00 00 00 00 00  - 
 1:   11 [4318] 00 00 00 00 00 00 00 00  - 
 1:   11 [4320] 00 00 00 00 00 00 00 00  - 
 1:   11 [4328] 00 00 00 00 00 00 00 00  - 
 1:   11 [4330] 00 00 00 00 00 00 00 00  - 
 1:   11 [4338] 00 00 00 00 00 00 00 00  - 
 1:   11 [4340] 00 00 00 00 00 00 00 00  - 
 1:   11 [4348] 00 00 00 00 00 00 00 00  - 
 1:   11 [4350] 00 00 00 00 00 00 00 00  - 
 1:   11 [4358] 00 00 00 00 00 00 00 00  - 
 1:   11 [4360] 00 00 00 00 00 00 00 00  - 
 1:   11 [4368] 00 00 00 00 00 00 00 00  - 
 1:   11 [4370] 00 00 00 00 00 00 00 00  - 
 1:   11 [4378] 00 00 00 00 00 00 00 00  - 
 1:   11 [4380] 00 00 00 00 00 00 00 00  - 
 1:   11 [4388] 00 00 00 00 00 00 00 00  - 
 1:   11 [4390] 00 00 00 00 00 00 00 00  - 
 1:   11 [4398] 00 00 00 00 00 00 00 00  - 
 1:   11 [43A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [43A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [43B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [43B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [43C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [43C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [43D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [43D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [43E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [43E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [43F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [43F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4400] 00 00 00 00 00 00 00 00  - 
 1:   11 [4408] 00 00 00 00 00 00 00 00  - 
 1:   11 [4410] 00 00 00 00 00 00 00 00  - 
 1:   11 [4418] 00 00 00 00 00 00 00 00  - 
 1:   11 [4420] 00 00 00 00 00 00 00 00  - 
 1:   11 [4428] 00 00 00 00 00 00 00 00  - 
 1:   11 [4430] 00 00 00 00 00 00 00 00  - 
 1:   11 [4438] 00 00 00 00 00 00 00 00  - 
 1:   11 [4440] 00 00 00 00 00 00 00 00  - 
 1:   11 [4448] 00 00 00 00 00 00 00 00  - 
 1:   11 [4450] 00 00 00 00 00 00 00 00  - 
 1:   11 [4458] 00 00 00 00 00 00 00 00  - 
 1:   11 [4460] 00 00 00 00 00 00 00 00  - 
 1:   11 [4468] 00 00 00 00 00 00 00 00  - 
 1:   11 [4470] 00 00 00 00 00 00 00 00  - 
 1:   11 [4478] 00 00 00 00 00 00 00 00  - 
 1:   11 [4480] 00 00 00 00 00 00 00 00  - 
 1:   11 [4488] 00 00 00 00 00 00 00 00  - 
 1:   11 [4490] 00 00 00 00 00 00 00 00  - 
 1:   11 [4498] 00 00 00 00 00 00 00 00  - 
 1:   11 [44A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [44A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [44B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [44B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [44C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [44C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [44D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [44D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [44E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [44E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [44F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [44F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4500] 00 00 00 00 00 00 00 00  - 
 1:   11 [4508] 00 00 00 00 00 00 00 00  - 
 1:   11 [4510] 00 00 00 00 00 00 00 00  - 
 1:   11 [4518] 00 00 00 00 00 00 00 00  - 
 1:   11 [4520] 00 00 00 00 00 00 00 00  - 
 1:   11 [4528] 00 00 00 00 00 00 00 00  - 
 1:   11 [4530] 00 00 00 00 00 00 00 00  - 
 1:   11 [4538] 00 00 00 00 00 00 00 00  - 
 1:   11 [4540] 00 00 00 00 00 00 00 00  - 
 1:   11 [4548] 00 00 00 00 00 00 00 00  - 
 1:   11 [4550] 00 00 00 00 00 00 00 00  - 
 1:   11 [4558] 00 00 00 00 00 00 00 00  - 
 1:   11 [4560] 00 00 00 00 00 00 00 00  - 
 1:   11 [4568] 00 00 00 00 00 00 00 00  - 
 1:   11 [4570] 00 00 00 00 00 00 00 00  - 
 1:   11 [4578] 00 00 00 00 00 00 00 00  - 
 1:   11 [4580] 00 00 00 00 00 00 00 00  - 
 1:   11 [4588] 00 00 00 00 00 00 00 00  - 
 1:   11 [4590] 00 00 00 00 00 00 00 00  - 
 1:   11 [4598] 00 00 00 00 00 00 00 00  - 
 1:   11 [45A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [45A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [45B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [45B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [45C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [45C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [45D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [45D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [45E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [45E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [45F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [45F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4600] 00 00 00 00 00 00 00 00  - 
 1:   11 [4608] 00 00 00 00 00 00 00 00  - 
 1:   11 [4610] 00 00 00 00 00 00 00 00  - 
 1:   11 [4618] 00 00 00 00 00 00 00 00  - 
 1:   11 [4620] 00 00 00 00 00 00 00 00  - 
 1:   11 [4628] 00 00 00 00 00 00 00 00  - 
 1:   11 [4630] 00 00 00 00 00 00 00 00  - 
 1:   11 [4638] 00 00 00 00 00 00 00 00  - 
 1:   11 [4640] 00 00 00 00 00 00 00 00  - 
 1:   11 [4648] 00 00 00 00 00 00 00 00  - 
 1:   11 [4650] 00 00 00 00 00 00 00 00  - 
 1:   11 [4658] 00 00 00 00 00 00 00 00  - 
 1:   11 [4660] 00 00 00 00 00 00 00 00  - 
 1:   11 [4668] 00 00 00 00 00 00 00 00  - 
 1:   11 [4670] 00 00 00 00 00 00 00 00  - 
 1:   11 [4678] 00 00 00 00 00 00 00 00  - 
 1:   11 [4680] 00 00 00 00 00 00 00 00  - 
 1:   11 [4688] 00 00 00 00 00 00 00 00  - 
 1:   11 [4690] 00 00 00 00 00 00 00 00  - 
 1:   11 [4698] 00 00 00 00 00 00 00 00  - 
 1:   11 [46A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [46A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [46B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [46B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [46C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [46C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [46D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [46D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [46E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [46E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [46F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [46F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4700] 00 00 00 00 00 00 00 00  - 
 1:   11 [4708] 00 00 00 00 00 00 00 00  - 
 1:   11 [4710] 00 00 00 00 00 00 00 00  - 
 1:   11 [4718] 00 00 00 00 00 00 00 00  - 
 1:   11 [4720] 00 00 00 00 00 00 00 00  - 
 1:   11 [4728] 00 00 00 00 00 00 00 00  - 
 1:   11 [4730] 00 00 00 00 00 00 00 00  - 
 1:   11 [4738] 00 00 00 00 00 00 00 00  - 
 1:   11 [4740] 00 00 00 00 00 00 00 00  - 
 1:   11 [4748] 00 00 00 00 00 00 00 00  - 
 1:   11 [4750] 00 00 00 00 00 00 00 00  - 
 1:   11 [4758] 00 00 00 00 00 00 00 00  - 
 1:   11 [4760] 00 00 00 00 00 00 00 00  - 
 1:   11 [4768] 00 00 00 00 00 00 00 00  - 
 1:   11 [4770] 00 00 00 00 00 00 00 00  - 
 1:   11 [4778] 00 00 00 00 00 00 00 00  - 
 1:   11 [4780] 00 00 00 00 00 00 00 00  - 
 1:   11 [4788] 00 00 00 00 00 00 00 00  - 
 1:   11 [4790] 00 00 00 00 00 00 00 00  - 
 1:   11 [4798] 00 00 00 00 00 00 00 00  - 
 1:   11 [47A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [47A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [47B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [47B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [47C0] 00 00 00 00 00 00 00 00  - 
 1:   11 [47C8] 00 00 00 00 00 00 00 00  - 
 1:   11 [47D0] 00 00 00 00 00 00 00 00  - 
 1:   11 [47D8] 00 00 00 00 00 00 00 00  - 
 1:   11 [47E0] 00 00 00 00 00 00 00 00  - 
 1:   11 [47E8] 00 00 00 00 00 00 00 00  - 
 1:   11 [47F0] 00 00 00 00 00 00 00 00  - 
 1:   11 [47F8] 00 00 00 00 00 00 00 00  - 
 1:   11 [4800] 00 00 00 00 00 00 00 00  - 
 1:   11 [4808] 00 00 00 00 00 00 00 00  - 
 1:   11 [4810] 00 00 00 00 00 00 00 00  - 
 1:   11 [4818] 00 00 00 00 00 00 00 00  - 
 1:   11 [4820] 00 00 00 00 00 00 00 00  - 
 1:   11 [4828] 00 00 00 00 00 00 00 00  - 
 1:   11 [4830] 00 00 00 00 00 00 00 00  - 
 1:   11 [4838] 00 00 00 00 00 00 00 00  - 
 1:   11 [4840] 00 00 00 00 00 00 00 00  - 
 1:   11 [4848] 00 00 00 00 00 00 00 00  - 
 1:   11 [4850] 00 00 00 00 00 00 00 00  - 
 1:   11 [4858] 00 00 00 00 00 00 00 00  - 
 1:   11 [4860] 00 00 00 00 00 00 00 00  - 
 1:   11 [4868] 00 00 00 00 00 00 00 00  - 
 1:   11 [4870] 00 00 00 00 00 00 00 00  - 
 1:   11 [4878] 00 00 00 00 00 00 00 00  - 
 1:   11 [4880] 00 00 00 00 00 00 00 00  - 
 1:   11 [4888] 00 00 00 00 00 00 00 00  - 
 1:   11 [4890] 00 00 00 00 00 00 00 00  - 
 1:   11 [4898] 00 00 00 00 00 00 00 00  - 
 1:   11 [48A0] 00 00 00 00 00 00 00 00  - 
 1:   11 [48A8] 00 00 00 00 00 00 00 00  - 
 1:   11 [48B0] 00 00 00 00 00 00 00 00  - 
 1:   11 [48B8] 00 00 00 00 00 00 00 00  - 
 1:   11 [48C0] 00 00 00 00              - 
 1:   12 [48C4]                          - world_a_org equ world_a + 34 + 1;
 1:   13 [48C4] 00 00 00 00 00 00 00 00  - world_b:    ds  34*66;
 1:   13 [48CC] 00 00 00 00 00 00 00 00  - 
 1:   13 [48D4] 00 00 00 00 00 00 00 00  - 
 1:   13 [48DC] 00 00 00 00 00 00 00 00  - 
 1:   13 [48E4] 00 00 00 00 00 00 00 00  - 
 1:   13 [48EC] 00 00 00 00 00 00 00 00  - 
 1:   13 [48F4] 00 00 00 00 00 00 00 00  - 
 1:   13 [48FC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4904] 00 00 00 00 00 00 00 00  - 
 1:   13 [490C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4914] 00 00 00 00 00 00 00 00  - 
 1:   13 [491C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4924] 00 00 00 00 00 00 00 00  - 
 1:   13 [492C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4934] 00 00 00 00 00 00 00 00  - 
 1:   13 [493C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4944] 00 00 00 00 00 00 00 00  - 
 1:   13 [494C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4954] 00 00 00 00 00 00 00 00  - 
 1:   13 [495C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4964] 00 00 00 00 00 00 00 00  - 
 1:   13 [496C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4974] 00 00 00 00 00 00 00 00  - 
 1:   13 [497C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4984] 00 00 00 00 00 00 00 00  - 
 1:   13 [498C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4994] 00 00 00 00 00 00 00 00  - 
 1:   13 [499C] 00 00 00 00 00 00 00 00  - 
 1:   13 [49A4] 00 00 00 00 00 00 00 00  - 
 1:   13 [49AC] 00 00 00 00 00 00 00 00  - 
 1:   13 [49B4] 00 00 00 00 00 00 00 00  - 
 1:   13 [49BC] 00 00 00 00 00 00 00 00  - 
 1:   13 [49C4] 00 00 00 00 00 00 00 00  - 
 1:   13 [49CC] 00 00 00 00 00 00 00 00  - 
 1:   13 [49D4] 00 00 00 00 00 00 00 00  - 
 1:   13 [49DC] 00 00 00 00 00 00 00 00  - 
 1:   13 [49E4] 00 00 00 00 00 00 00 00  - 
 1:   13 [49EC] 00 00 00 00 00 00 00 00  - 
 1:   13 [49F4] 00 00 00 00 00 00 00 00  - 
 1:   13 [49FC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A04] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A0C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A14] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A1C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A24] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A2C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A34] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A3C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A44] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A4C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A54] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A5C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A64] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A6C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A74] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A7C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A84] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A8C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A94] 00 00 00 00 00 00 00 00  - 
 1:   13 [4A9C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AA4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AAC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AB4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4ABC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AC4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4ACC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AD4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4ADC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AE4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AEC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AF4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4AFC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B04] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B0C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B14] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B1C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B24] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B2C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B34] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B3C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B44] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B4C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B54] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B5C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B64] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B6C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B74] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B7C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B84] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B8C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B94] 00 00 00 00 00 00 00 00  - 
 1:   13 [4B9C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BA4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BAC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BB4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BBC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BC4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BCC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BD4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BDC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BE4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BEC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BF4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4BFC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C04] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C0C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C14] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C1C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C24] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C2C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C34] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C3C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C44] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C4C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C54] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C5C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C64] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C6C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C74] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C7C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C84] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C8C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C94] 00 00 00 00 00 00 00 00  - 
 1:   13 [4C9C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CA4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CAC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CB4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CBC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CC4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CCC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CD4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CDC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CE4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CEC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CF4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4CFC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D04] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D0C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D14] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D1C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D24] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D2C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D34] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D3C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D44] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D4C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D54] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D5C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D64] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D6C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D74] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D7C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D84] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D8C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D94] 00 00 00 00 00 00 00 00  - 
 1:   13 [4D9C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DA4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DAC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DB4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DBC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DC4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DCC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DD4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DDC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DE4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DEC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DF4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4DFC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E04] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E0C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E14] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E1C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E24] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E2C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E34] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E3C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E44] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E4C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E54] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E5C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E64] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E6C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E74] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E7C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E84] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E8C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E94] 00 00 00 00 00 00 00 00  - 
 1:   13 [4E9C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EA4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EAC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EB4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EBC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EC4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4ECC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4ED4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EDC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EE4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EEC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EF4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4EFC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F04] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F0C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F14] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F1C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F24] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F2C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F34] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F3C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F44] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F4C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F54] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F5C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F64] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F6C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F74] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F7C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F84] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F8C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F94] 00 00 00 00 00 00 00 00  - 
 1:   13 [4F9C] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FA4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FAC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FB4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FBC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FC4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FCC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FD4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FDC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FE4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FEC] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FF4] 00 00 00 00 00 00 00 00  - 
 1:   13 [4FFC] 00 00 00 00 00 00 00 00  - 
 1:   13 [5004] 00 00 00 00 00 00 00 00  - 
 1:   13 [500C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5014] 00 00 00 00 00 00 00 00  - 
 1:   13 [501C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5024] 00 00 00 00 00 00 00 00  - 
 1:   13 [502C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5034] 00 00 00 00 00 00 00 00  - 
 1:   13 [503C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5044] 00 00 00 00 00 00 00 00  - 
 1:   13 [504C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5054] 00 00 00 00 00 00 00 00  - 
 1:   13 [505C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5064] 00 00 00 00 00 00 00 00  - 
 1:   13 [506C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5074] 00 00 00 00 00 00 00 00  - 
 1:   13 [507C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5084] 00 00 00 00 00 00 00 00  - 
 1:   13 [508C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5094] 00 00 00 00 00 00 00 00  - 
 1:   13 [509C] 00 00 00 00 00 00 00 00  - 
 1:   13 [50A4] 00 00 00 00 00 00 00 00  - 
 1:   13 [50AC] 00 00 00 00 00 00 00 00  - 
 1:   13 [50B4] 00 00 00 00 00 00 00 00  - 
 1:   13 [50BC] 00 00 00 00 00 00 00 00  - 
 1:   13 [50C4] 00 00 00 00 00 00 00 00  - 
 1:   13 [50CC] 00 00 00 00 00 00 00 00  - 
 1:   13 [50D4] 00 00 00 00 00 00 00 00  - 
 1:   13 [50DC] 00 00 00 00 00 00 00 00  - 
 1:   13 [50E4] 00 00 00 00 00 00 00 00  - 
 1:   13 [50EC] 00 00 00 00 00 00 00 00  - 
 1:   13 [50F4] 00 00 00 00 00 00 00 00  - 
 1:   13 [50FC] 00 00 00 00 00 00 00 00  - 
 1:   13 [5104] 00 00 00 00 00 00 00 00  - 
 1:   13 [510C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5114] 00 00 00 00 00 00 00 00  - 
 1:   13 [511C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5124] 00 00 00 00 00 00 00 00  - 
 1:   13 [512C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5134] 00 00 00 00 00 00 00 00  - 
 1:   13 [513C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5144] 00 00 00 00 00 00 00 00  - 
 1:   13 [514C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5154] 00 00 00 00 00 00 00 00  - 
 1:   13 [515C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5164] 00 00 00 00 00 00 00 00  - 
 1:   13 [516C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5174] 00 00 00 00 00 00 00 00  - 
 1:   13 [517C] 00 00 00 00 00 00 00 00  - 
 1:   13 [5184] 00 00 00 00              - 
 1:   14 [5188]                          - world_b_org equ world_b + 34 + 1;
 1:   15 [5188] 00                       - use_b:      db;
 1:   16 [5189] 00 00                    - dst_ptr:    dw;
 1:   17 [518B] 00 00                    - src_ptr:    dw;
 1:   18 [518D] 00 00                    - disp_ptr:   dw;
 1:   19 [518F] 00                       - row_count:  db;
 1:   20 [5190] 00                       - col_count:  db;
 1:   22 [5191]                          - 
 1:   23 [5191]                          - // **************************************
 1:   24 [5191]                          - // code....
 1:   24 [0000]                          -             org  0;
 1:   26 [0000]                          -         
 1:   27 [0000]                          - // vectors
 1:   27 [0000] F3 10 00                 - reset:       jmp    start;
 1:   28 [0003] FF                       -             nop;
 1:   29 [0004] C7                       - ext_int:     reti;
 1:   30 [0005] FF                       -             nop;
 1:   31 [0006] FF                       -             nop;
 1:   32 [0007] FF                       -             nop;        
 1:   33 [0008] C7                       - div_zero:    reti;
 1:   34 [0009] FF                       -             nop;
 1:   35 [000A] FF                       -             nop;
 1:   36 [000B] FF                       -             nop;        
 1:   37 [000C] C7                       - illegal:     reti;
 1:   38 [000D] FF                       -             nop;
 1:   39 [000E] FF                       -             nop;
 1:   40 [000F] FF                       -             nop;
 1:   42 [0010]                          - 
 1:   43 [0010]                          - // *********************
 1:   44 [0010]                          - // The program....            
 1:   45 [0010]                          - start:
 1:   46 [0010]                          -         // give ourselves a stck...
 1:   46 [0010] D0 00 70                 -         ld.w    r0,#0x7000;
 1:   47 [0013] F1                       -         move    sp,r0;
 1:   49 [0014]                          - 
 1:   49 [0014] CF 6D 00                 -         jsr init;
 1:   50 [0017] 20                       -         xor r0,r0;
 1:   51 [0018] BC 88 51                 -         st.b    use_b,r0; // so start with A
 1:   53 [001B]                          - main_loop:
 1:   53 [001B] CF 2D 00                 -         jsr display_world;
 1:   54 [001E] CF 9C 00                 -         jsr update_world;
 1:   55 [0021] B4 88 51                 -         ld.b    r0,use_b;
 1:   56 [0024] D5 01                    -         ld.b    r1,#1;
 1:   57 [0026] 21                       -         xor r1,r0;
 1:   58 [0027] BD 88 51                 -         st.b    use_b,r1;
 1:   59 [002A] F3 1B 00                 -         jmp main_loop;
 1:   61 [002D]                          - 
 1:   62 [002D]                          - // *********************
 1:   63 [002D]                          - // To display a world we extract the core of the current world and format it
 1:   64 [002D]                          - // for the internal RAM.
 1:   65 [002D]                          - display_world:
 1:   65 [002D] D3 23 40                 -         ld.w    r3,#world_a_org;
 1:   66 [0030] B4 88 51                 -         ld.b    r0,use_b;
 1:   67 [0033] E7 03                    -         beq dw1;
 1:   68 [0035] D3 E7 48                 -         ld.w    r3,#world_b_org;
 1:   70 [0038]                          - dw1:
 1:   70 [0038] D2 00 A0                 -         ld.w    r2,#INT_RAM_START;
 1:   71 [003B] BA 8D 51                 -         st.w    disp_ptr,r2;
 1:   72 [003E] 20                       -         xor r0,r0;
 1:   73 [003F] BC 8F 51                 -         st.b    row_count,r0;
 1:   75 [0042]                          - dw4:
 1:   76 [0042]                          -         // inner row loop
 1:   76 [0042] 20                       -         xor r0,r0;  // r0 is loop counter
 1:   78 [0043]                          - dw5:
 1:   78 [0043] 2A                       -         xor r2,r2;  // r2 is accumulator
 1:   80 [0044]                          - dw3:
 1:   80 [0044] DA 1F                    -         lsr r2,#1;
 1:   81 [0046] 97                       -         ld.b    r1,(r3++);
 1:   82 [0047] E7 03                    -         beq dw2;
 1:   83 [0049] D5 80                    -         ld.b    r1,#128;
 1:   84 [004B] 46                       -         add r2,r1;
 1:   86 [004C]                          - dw2:
 1:   86 [004C] 54                       -         addq    r0,#1;
 1:   88 [004D]                          -         // see if we have a byte to write
 1:   88 [004D] D5 07                    -         ld.b    r1,#7;
 1:   89 [004F] 11                       -         and r1,r0;
 1:   90 [0050] E6 F2                    -         bne dw3;    // no so do next bit
 1:   92 [0052]                          -         
 1:   93 [0052]                          -         // yes, so write it to display
 1:   93 [0052] 09                       -         move    r1,r2;
 1:   94 [0053] B2 8D 51                 -         ld.w    r2,disp_ptr;
 1:   95 [0056] 9D                       -         st.b    (r2++),r1;
 1:   96 [0057] BA 8D 51                 -         st.w    disp_ptr,r2;
 1:   98 [005A]                          -         
 1:   99 [005A]                          -         // now see if done end of row
 1:   99 [005A] D5 20                    -         ld.b    r1,#32;
 1:  100 [005C] 74                       -         cmp r0,r1;
 1:  101 [005D] E6 E4                    -         bne dw5;    // no, so carry on.
 1:  103 [005F]                          -         
 1:  104 [005F]                          -         // end of row, so incr count and see if finished...
 1:  104 [005F] 53                       -         addq    r3,#2;  // skip src ptr over replicating lines
 1:  105 [0060] B6 8F 51                 -         ld.b    r2,row_count;
 1:  106 [0063] 56                       -         addq    r2,#1;
 1:  107 [0064] BE 8F 51                 -         st.b    row_count,r2;
 1:  108 [0067] D4 40                    -         ld.b    r0,#64;
 1:  109 [0069] 78                       -         cmp r0,r2;
 1:  110 [006A] E6 D6                    -         bne dw4;    // not finished yet
 1:  112 [006C]                          -         
 1:  113 [006C]                          -         // all done
 1:  113 [006C] C6                       -         ret;
 1:  115 [006D]                          -         
 1:  116 [006D]                          - // ***********************************
 1:  117 [006D]                          - // initialise world A to be blank with a blinker and a glider...
 1:  118 [006D]                          - init:
 1:  119 [006D]                          -         
 1:  119 [006D] 20                       -             xor     r0,r0;
 1:  120 [006E] D2 00 40                 -             ld.w    r2,#world_a;
 1:  121 [0071] D1 62 04                 -             ld.w    r1,#34*66/2;
 1:  123 [0074]                          - clr_loop:
 1:  123 [0074] 98                       -             st.w    (r2++),r0;
 1:  124 [0075] 59                       -             addq    r1,#-2;
 1:  125 [0076] E6 FC                    -             bne     clr_loop;
 1:  127 [0078]                          -             
 1:  127 [0078] D4 01                    -         ld.b    r0,#1;
 1:  128 [007A] BC 81 41                 -         st.b    world_a_org + 10 + 10*34,r0;
 1:  129 [007D] BC 82 41                 -         st.b    world_a_org + 11 + 10*34,r0;
 1:  130 [0080] BC 83 41                 -         st.b    world_a_org + 12 + 10*34,r0;
 1:  132 [0083]                          - 
 1:  132 [0083] BC 8B 41                 -         st.b    world_a_org + 20 + 10*34,r0;
 1:  133 [0086] BC AD 41                 -         st.b    world_a_org + 20 + 11*34,r0;
 1:  134 [0089] BC CF 41                 -         st.b    world_a_org + 20 + 12*34,r0;
 1:  136 [008C]                          -         
 1:  136 [008C] BC 30 44                 -         st.b    world_a_org + 17 + 30*34,r0;
 1:  137 [008F] BC 50 44                 -         st.b    world_a_org + 15 + 31*34,r0;
 1:  138 [0092] BC 52 44                 -         st.b    world_a_org + 17 + 31*34,r0;
 1:  139 [0095] BC 73 44                 -         st.b    world_a_org + 16 + 32*34,r0;
 1:  140 [0098] BC 74 44                 -         st.b    world_a_org + 17 + 32*34,r0;
 1:  142 [009B]                          - 
 1:  142 [009B] C6                       -         ret;
 1:  144 [009C]                          - 
 1:  145 [009C]                          - // ***********************************
 1:  146 [009C]                          - // create a new generation in alternate universe
 1:  147 [009C]                          - update_world:
 1:  147 [009C] CF CF 00                 -         jsr init_update;
 1:  149 [009F]                          -         
 1:  149 [009F] D0 DD FF                 -         ld.w    r0,#-35;
 1:  150 [00A2] CF 88 01                 -         jsr acc_field;
 1:  151 [00A5] D0 DE FF                 -         ld.w    r0,#-34;
 1:  152 [00A8] CF 88 01                 -         jsr acc_field;
 1:  153 [00AB] D0 DF FF                 -         ld.w    r0,#-33;
 1:  154 [00AE] CF 88 01                 -         jsr acc_field;
 1:  156 [00B1]                          -         
 1:  156 [00B1] D0 FF FF                 -         ld.w    r0,#-1;
 1:  157 [00B4] CF 88 01                 -         jsr acc_field;
 1:  159 [00B7]                          - //      ld.b    r0,#0;
 1:  160 [00B7]                          - //      jsr acc_field;
 1:  160 [00B7] D4 01                    -         ld.b    r0,#1;
 1:  161 [00B9] CF 88 01                 -         jsr acc_field;
 1:  163 [00BC]                          -         
 1:  163 [00BC] D4 21                    -         ld.b    r0,#33;
 1:  164 [00BE] CF 88 01                 -         jsr acc_field;
 1:  165 [00C1] D4 22                    -         ld.b    r0,#34;
 1:  166 [00C3] CF 88 01                 -         jsr acc_field;
 1:  167 [00C6] D4 23                    -         ld.b    r0,#35;
 1:  168 [00C8] CF 88 01                 -         jsr acc_field;
 1:  170 [00CB]                          -         
 1:  170 [00CB] CF B2 01                 -         jsr life_death;
 1:  172 [00CE]                          -         
 1:  172 [00CE] C6                       -         ret;
 1:  174 [00CF]                          - 
 1:  175 [00CF]                          - // **********************************
 1:  176 [00CF]                          - // to init calculation we extend edges of world to handle
 1:  177 [00CF]                          - // wraparond, and init the accumulation to original world.
 1:  178 [00CF]                          - init_update:
 1:  178 [00CF] D3 23 40                 -         ld.w    r3,#world_a_org;
 1:  179 [00D2] D2 E7 48                 -         ld.w    r2,#world_b_org;
 1:  180 [00D5] B4 88 51                 -         ld.b    r0,use_b;
 1:  181 [00D8] E7 06                    -         beq iu1;
 1:  182 [00DA] D3 E7 48                 -         ld.w    r3,#world_b_org;
 1:  183 [00DD] D2 23 40                 -         ld.w    r2,#world_a_org;
 1:  185 [00E0]                          - iu1:
 1:  185 [00E0] BB 8B 51                 -         st.w    src_ptr,R3;
 1:  186 [00E3] BA 89 51                 -         st.w    dst_ptr,R2;
 1:  188 [00E6]                          - 
 1:  189 [00E6]                          -         // TL corner comes from BR
 1:  189 [00E6] D1 7D 08                 -         ld.w    r1,#63*34+31;
 1:  190 [00E9] 0E                       -         move    r2,r3;
 1:  191 [00EA] 46                       -         add r2,r1;
 1:  192 [00EB] 84                       -         ld.b    r0,(r2);
 1:  193 [00EC] D1 DD FF                 -         ld.w    r1,#-35;
 1:  194 [00EF] 0E                       -         move    r2,r3;
 1:  195 [00F0] 46                       -         add r2,r1;
 1:  196 [00F1] 8C                       -         st.b    (r2),r0;
 1:  198 [00F2]                          - 
 1:  199 [00F2]                          -         // TR corner comes from BL
 1:  199 [00F2] D1 80 08                 -         ld.w    r1,#64*34;
 1:  200 [00F5] 0E                       -         move    r2,r3;
 1:  201 [00F6] 46                       -         add r2,r1;
 1:  202 [00F7] 84                       -         ld.b    r0,(r2);
 1:  203 [00F8] D1 FE FF                 -         ld.w    r1,#-2;
 1:  204 [00FB] 0E                       -         move    r2,r3;
 1:  205 [00FC] 46                       -         add r2,r1;
 1:  206 [00FD] 8C                       -         st.b    (r2),r0;
 1:  208 [00FE]                          - 
 1:  209 [00FE]                          -         // BL corner comes from TR
 1:  209 [00FE] D1 1F 00                 -         ld.w    r1,#31;
 1:  210 [0101] 0E                       -         move    r2,r3;
 1:  211 [0102] 46                       -         add r2,r1;
 1:  212 [0103] 84                       -         ld.b    r0,(r2);
 1:  213 [0104] D1 7F 08                 -         ld.w    r1,#64*34-1;
 1:  214 [0107] 0E                       -         move    r2,r3;
 1:  215 [0108] 46                       -         add r2,r1;
 1:  216 [0109] 8C                       -         st.b    (r2),r0;
 1:  218 [010A]                          - 
 1:  219 [010A]                          -         // BR corner comes from TL
 1:  219 [010A] D1 00 00                 -         ld.w    r1,#0;
 1:  220 [010D] 0E                       -         move    r2,r3;
 1:  221 [010E] 46                       -         add r2,r1;
 1:  222 [010F] 84                       -         ld.b    r0,(r2);
 1:  223 [0110] D1 A0 08                 -         ld.w    r1,#64*34+32;
 1:  224 [0113] 0E                       -         move    r2,r3;
 1:  225 [0114] 46                       -         add r2,r1;
 1:  226 [0115] 8C                       -         st.b    (r2),r0;
 1:  228 [0116]                          - 
 1:  229 [0116]                          -         // top edge goes to bottom
 1:  229 [0116] B2 8B 51                 -         ld.w    r2,src_ptr;
 1:  230 [0119] B3 8B 51                 -         ld.w    r3,src_ptr;
 1:  231 [011C] D1 80 08                 -         ld.w    r1,#64*34;
 1:  232 [011F] 47                       -         add r3,r1;
 1:  233 [0120] D5 20                    -         ld.b    r1,#32;
 1:  235 [0122]                          - iu2:
 1:  235 [0122] 94                       -         ld.b    r0,(r2++);
 1:  236 [0123] 9E                       -         st.b    (r3++),r0;
 1:  237 [0124] 5D                       -         addq    r1,#-1;
 1:  238 [0125] E6 FB                    -         bne iu2;
 1:  240 [0127]                          - 
 1:  241 [0127]                          -         // bottom edge goes to top
 1:  241 [0127] B2 8B 51                 -         ld.w    r2,src_ptr;
 1:  242 [012A] D1 5E 08                 -         ld.w    r1,#63*34;
 1:  243 [012D] 46                       -         add r2,r1;
 1:  244 [012E] B3 8B 51                 -         ld.w    r3,src_ptr;
 1:  245 [0131] D1 DE FF                 -         ld.w    r1,#-34;
 1:  246 [0134] 47                       -         add r3,r1;
 1:  247 [0135] D5 20                    -         ld.b    r1,#32;
 1:  249 [0137]                          - iu3:
 1:  249 [0137] 94                       -         ld.b    r0,(r2++);
 1:  250 [0138] 9E                       -         st.b    (r3++),r0;
 1:  251 [0139] 5D                       -         addq    r1,#-1;
 1:  252 [013A] E6 FB                    -         bne iu3;
 1:  254 [013C]                          - 
 1:  255 [013C]                          -         // left edge goes to right
 1:  255 [013C] B2 8B 51                 -         ld.w    r2,src_ptr;
 1:  256 [013F] B3 8B 51                 -         ld.w    r3,src_ptr;
 1:  257 [0142] D1 20 00                 -         ld.w    r1,#32;
 1:  258 [0145] 47                       -         add r3,r1;
 1:  259 [0146] D5 40                    -         ld.b    r1,#64;
 1:  261 [0148]                          - iu4:
 1:  261 [0148] 84                       -         ld.b    r0,(r2);
 1:  262 [0149] 8E                       -         st.b    (r3),r0;
 1:  263 [014A] D4 22                    -         ld.b    r0,#34;
 1:  264 [014C] 42                       -         add r2,r0;
 1:  265 [014D] 43                       -         add r3,r0;
 1:  266 [014E] 5D                       -         addq    r1,#-1;
 1:  267 [014F] E6 F7                    -         bne iu4;
 1:  269 [0151]                          - 
 1:  270 [0151]                          -         // right edge goes to left
 1:  270 [0151] B2 8B 51                 -         ld.w    r2,src_ptr;
 1:  271 [0154] D1 1F 00                 -         ld.w    r1,#31;
 1:  272 [0157] 46                       -         add r2,r1;
 1:  273 [0158] B3 8B 51                 -         ld.w    r3,src_ptr;
 1:  274 [015B] D1 FF FF                 -         ld.w    r1,#-1;
 1:  275 [015E] 47                       -         add r3,r1;
 1:  276 [015F] D5 40                    -         ld.b    r1,#64;
 1:  278 [0161]                          - iu5:
 1:  278 [0161] 84                       -         ld.b    r0,(r2);
 1:  279 [0162] 8E                       -         st.b    (r3),r0;
 1:  280 [0163] D4 22                    -         ld.b    r0,#34;
 1:  281 [0165] 42                       -         add r2,r0;
 1:  282 [0166] 43                       -         add r3,r0;
 1:  283 [0167] 5D                       -         addq    r1,#-1;
 1:  284 [0168] E6 F7                    -         bne iu5;
 1:  286 [016A]                          - 
 1:  287 [016A]                          - 
 1:  288 [016A]                          -         // now copy core of src world to dst to act as init of accum
 1:  288 [016A] B2 8B 51                 -         ld.w    r2,src_ptr;
 1:  289 [016D] B3 89 51                 -         ld.w    r3,dst_ptr;
 1:  290 [0170] D4 40                    -         ld.b    r0,#64;
 1:  291 [0172] BC 8F 51                 -         st.b    row_count,r0;
 1:  293 [0175]                          - iu6:
 1:  293 [0175] D4 10                    -         ld.b    r0,#16; // we'll do copy as words so tice as quick
 1:  295 [0177]                          - iu7:
 1:  295 [0177] 91                       -         ld.w    r1,(r2++);
 1:  296 [0178] 9B                       -         st.w    (r3++),r1;
 1:  297 [0179] 5C                       -         addq    r0,#-1;
 1:  298 [017A] E6 FB                    -         bne iu7;
 1:  299 [017C] 52                       -         addq    r2,#+2;
 1:  300 [017D] 53                       -         addq    r3,#2;
 1:  301 [017E] B5 8F 51                 -         ld.b    r1,row_count;
 1:  302 [0181] 5D                       -         addq    r1,#-1;
 1:  303 [0182] BD 8F 51                 -         st.b    row_count,r1;
 1:  304 [0185] E6 EE                    -         bne iu6;
 1:  306 [0187]                          -         
 1:  306 [0187] C6                       -         ret;
 1:  308 [0188]                          -         
 1:  309 [0188]                          - // *****************************************
 1:  310 [0188]                          - // here we accumulate counts from neighbours...
 1:  311 [0188]                          - // The offset will be in R0.
 1:  312 [0188]                          - acc_field:
 1:  312 [0188] B2 8B 51                 -         ld.w    r2,src_ptr;
 1:  313 [018B] 42                       -         add r2,r0;
 1:  314 [018C] B3 89 51                 -         ld.w    r3,dst_ptr;
 1:  315 [018F] D4 40                    -         ld.b    r0,#64;
 1:  316 [0191] BC 8F 51                 -         st.b    row_count,r0;
 1:  318 [0194]                          - af1:
 1:  318 [0194] D4 10                    -         ld.b    r0,#16; // we'll do copy as words so twice as quick
 1:  319 [0196] BC 90 51                 -         st.b    col_count,r0;
 1:  321 [0199]                          - af2:
 1:  321 [0199] 91                       -         ld.w    r1,(r2++);
 1:  322 [019A] 82                       -         ld.w    r0,(r3);
 1:  323 [019B] 41                       -         add r1,r0;  // we can add the two bytes in parallel as a word as there is no danger of overflow
 1:  324 [019C] 9B                       -         st.w    (r3++),r1;
 1:  325 [019D] B4 90 51                 -         ld.b    r0,col_count;
 1:  326 [01A0] 5C                       -         addq    r0,#-1;
 1:  327 [01A1] B8 90 51                 -         st.w    col_count,r0;
 1:  328 [01A4] E6 F3                    -         bne af2;
 1:  329 [01A6] 52                       -         addq    r2,#+2;
 1:  330 [01A7] 53                       -         addq    r3,#2;
 1:  331 [01A8] B5 8F 51                 -         ld.b    r1,row_count;
 1:  332 [01AB] 5D                       -         addq    r1,#-1;
 1:  333 [01AC] BD 8F 51                 -         st.b    row_count,r1;
 1:  334 [01AF] E6 E3                    -         bne af1;
 1:  336 [01B1]                          -         
 1:  336 [01B1] C6                       -         ret;
 1:  338 [01B2]                          - 
 1:  339 [01B2]                          - // ***********************************
 1:  340 [01B2]                          - // here we look at the accumulator to see if we have life or death..
 1:  341 [01B2]                          - life_death:
 1:  341 [01B2] B2 8B 51                 -         ld.w    r2,src_ptr;
 1:  342 [01B5] B3 89 51                 -         ld.w    r3,dst_ptr;
 1:  343 [01B8] D4 40                    -         ld.b    r0,#64;
 1:  344 [01BA] BC 8F 51                 -         st.b    row_count,r0;
 1:  346 [01BD]                          - ld1:
 1:  346 [01BD] D4 20                    -         ld.b    r0,#32;
 1:  347 [01BF] BC 90 51                 -         st.b    col_count,r0;
 1:  349 [01C2]                          - ld2:
 1:  349 [01C2] 87                       -         ld.b    r1,(r3);
 1:  350 [01C3] D4 03                    -         ld.b    r0,#3;
 1:  351 [01C5] 74                       -         cmp r0,r1;
 1:  352 [01C6] E6 07                    -         bne ld3;
 1:  354 [01C8]                          -         // a count of 3 is live
 1:  354 [01C8] D4 01                    -         ld.b    r0,#1;
 1:  355 [01CA] 9E                       -         st.b    (r3++),r0;
 1:  356 [01CB] 56                       -         addq    r2,#1;
 1:  357 [01CC] F3 DC 01                 -         jmp ld4;
 1:  359 [01CF]                          - ld3:
 1:  360 [01CF]                          -         // a count of 4 means retain current
 1:  360 [01CF] D4 04                    -         ld.b    r0,#4;
 1:  361 [01D1] 74                       -         cmp r0,r1;
 1:  362 [01D2] E6 05                    -         bne ld5;
 1:  363 [01D4] 95                       -         ld.b    r1,(r2++);
 1:  364 [01D5] 9F                       -         st.b    (r3++),r1;
 1:  365 [01D6] F3 DC 01                 -         jmp ld4;
 1:  367 [01D9]                          - ld5:
 1:  368 [01D9]                          -         // a count not 3 or 4 meqns death
 1:  368 [01D9] 25                       -         xor r1,r1;
 1:  369 [01DA] 9F                       -         st.b    (r3++),r1;
 1:  370 [01DB] 56                       -         addq    r2,#1;
 1:  372 [01DC]                          -         // drop thru...
 1:  373 [01DC]                          - 
 1:  374 [01DC]                          - ld4:
 1:  374 [01DC] B4 90 51                 -         ld.b    r0,col_count;
 1:  375 [01DF] 5C                       -         addq    r0,#-1;
 1:  376 [01E0] BC 90 51                 -         st.b    col_count,r0;
 1:  377 [01E3] E6 DD                    -         bne ld2;
 1:  379 [01E5]                          -         
 1:  379 [01E5] 52                       -         addq    r2,#2;
 1:  380 [01E6] 53                       -         addq    r3,#2;
 1:  382 [01E7]                          -         
 1:  382 [01E7] B4 8F 51                 -         ld.b    r0,row_count;
 1:  383 [01EA] 5C                       -         addq    r0,#-1;
 1:  384 [01EB] BC 8F 51                 -         st.b    row_count,r0;
 1:  385 [01EE] E6 CD                    -         bne ld1;
 1:  387 [01F0]                          -         
 1:  387 [01F0] C6                       -         ret;
 1:  389 [01F1]                          -         
 0:    0 [01F1]                          - // *******************************************************
                               ACC_FIELD  = 0x00000188,      392   : Integer. Decl File  1, Line  311
                                     AF1  = 0x00000194,      404   : Integer. Decl File  1, Line  317
                                     AF2  = 0x00000199,      409   : Integer. Decl File  1, Line  320
                                CLR_LOOP  = 0x00000074,      116   : Integer. Decl File  1, Line  122
                               COL_COUNT  = 0x00005190,    20880   : Integer. Decl File  1, Line   20
                           DISPLAY_WORLD  = 0x0000002D,       45   : Integer. Decl File  1, Line   64
                                DISP_PTR  = 0x0000518D,    20877   : Integer. Decl File  1, Line   18
                                DIV_ZERO  = 0x00000008,        8   : Integer. Decl File  1, Line   33
                                 DST_PTR  = 0x00005189,    20873   : Integer. Decl File  1, Line   16
                                     DW1  = 0x00000038,       56   : Integer. Decl File  1, Line   69
                                     DW2  = 0x0000004C,       76   : Integer. Decl File  1, Line   85
                                     DW3  = 0x00000044,       68   : Integer. Decl File  1, Line   79
                                     DW4  = 0x00000042,       66   : Integer. Decl File  1, Line   74
                                     DW5  = 0x00000043,       67   : Integer. Decl File  1, Line   77
                                 EXT_INT  = 0x00000004,        4   : Integer. Decl File  1, Line   29
                             GEN_IO_BASE  = 0x00008030,    32816   : Integer. Decl File  2, Line   34
                              GEN_IO_CTR  = 0x00008034,    32820   : Integer. Decl File  2, Line   39
                            GEN_IO_INPUT  = 0x00008032,    32818   : Integer. Decl File  2, Line   38
                           GEN_IO_OUTPUT  = 0x00008030,    32816   : Integer. Decl File  2, Line   37
                                 ILLEGAL  = 0x0000000C,       12   : Integer. Decl File  1, Line   37
                                    INIT  = 0x0000006D,      109   : Integer. Decl File  1, Line  117
                             INIT_UPDATE  = 0x000000CF,      207   : Integer. Decl File  1, Line  177
                          INTERRUPT_BASE  = 0x00008020,    32800   : Integer. Decl File  2, Line   33
                   INTERRUPT_BIT_COUNTER  = 0x00000010,       16   : Integer. Decl File  2, Line   74
              INTERRUPT_BIT_INPUT_CHANGE  = 0x00000020,       32   : Integer. Decl File  2, Line   75
                     INTERRUPT_BIT_TIMER  = 0x00000008,        8   : Integer. Decl File  2, Line   73
              INTERRUPT_BIT_UART_RX_DATA  = 0x00000004,        4   : Integer. Decl File  2, Line   72
                INTERRUPT_BIT_UART_SPACE  = 0x00000002,        2   : Integer. Decl File  2, Line   71
                      INTERRUPT_BIT_USER  = 0x00000001,        1   : Integer. Decl File  2, Line   70
                          INTERRUPT_MASK  = 0x00008021,    32801   : Integer. Decl File  2, Line   67
                        INTERRUPT_SOURCE  = 0x00008020,    32800   : Integer. Decl File  2, Line   66
                    INT_RAM_BYTES_ACROSS  = 0x00000004,        4   : Integer. Decl File  2, Line   23
                    INT_RAM_BYTES_HEIGHT  = 0x00000040,       64   : Integer. Decl File  2, Line   25
           INT_RAM_BYTES_HEIGHT_AS_SHIFT  = 0x00000006,        6   : Integer. Decl File  2, Line   24
                             INT_RAM_LEN  = 0x00000100,      256   : Integer. Decl File  2, Line   21
                           INT_RAM_START  = 0x0000A000,    40960   : Integer. Decl File  2, Line   20
                   IO_SWITCH_FLAG_CIRCLE  = 0x00000040,       64   : Integer. Decl File  2, Line   58
                    IO_SWITCH_FLAG_CROSS  = 0x00000080,      128   : Integer. Decl File  2, Line   59
                     IO_SWITCH_FLAG_DOWN  = 0x00000002,        2   : Integer. Decl File  2, Line   53
                       IO_SWITCH_FLAG_L1  = 0x00000100,      256   : Integer. Decl File  2, Line   60
                       IO_SWITCH_FLAG_L2  = 0x00000200,      512   : Integer. Decl File  2, Line   61
                     IO_SWITCH_FLAG_LEFT  = 0x00000004,        4   : Integer. Decl File  2, Line   54
                       IO_SWITCH_FLAG_R1  = 0x00000400,     1024   : Integer. Decl File  2, Line   62
                       IO_SWITCH_FLAG_R2  = 0x00000800,     2048   : Integer. Decl File  2, Line   63
                    IO_SWITCH_FLAG_RIGHT  = 0x00000008,        8   : Integer. Decl File  2, Line   55
                   IO_SWITCH_FLAG_SQUARE  = 0x00000010,       16   : Integer. Decl File  2, Line   56
                 IO_SWITCH_FLAG_TRIANGLE  = 0x00000020,       32   : Integer. Decl File  2, Line   57
                       IO_SWITCH_FLAG_UP  = 0x00000001,        1   : Integer. Decl File  2, Line   52
                                     IU1  = 0x000000E0,      224   : Integer. Decl File  1, Line  184
                                     IU2  = 0x00000122,      290   : Integer. Decl File  1, Line  234
                                     IU3  = 0x00000137,      311   : Integer. Decl File  1, Line  248
                                     IU4  = 0x00000148,      328   : Integer. Decl File  1, Line  260
                                     IU5  = 0x00000161,      353   : Integer. Decl File  1, Line  277
                                     IU6  = 0x00000175,      373   : Integer. Decl File  1, Line  292
                                     IU7  = 0x00000177,      375   : Integer. Decl File  1, Line  294
                                     LD1  = 0x000001BD,      445   : Integer. Decl File  1, Line  345
                                     LD2  = 0x000001C2,      450   : Integer. Decl File  1, Line  348
                                     LD3  = 0x000001CF,      463   : Integer. Decl File  1, Line  358
                                     LD4  = 0x000001DC,      476   : Integer. Decl File  1, Line  373
                                     LD5  = 0x000001D9,      473   : Integer. Decl File  1, Line  366
                              LIFE_DEATH  = 0x000001B2,      434   : Integer. Decl File  1, Line  340
                               MAIN_LOOP  = 0x0000001B,       27   : Integer. Decl File  1, Line   52
                        PERIPHERALS_BASE  = 0x00008000,    32768   : Integer. Decl File  2, Line   30
                       PS_INT_ENABLE_BIT  = 0x00000001,        1   : Integer. Decl File  2, Line   15
                                   RESET  = 0x00000000,        0   : Integer. Decl File  1, Line   27
                               ROW_COUNT  = 0x0000518F,    20879   : Integer. Decl File  1, Line   19
                                 SRC_PTR  = 0x0000518B,    20875   : Integer. Decl File  1, Line   17
                                   START  = 0x00000010,       16   : Integer. Decl File  1, Line   44
                              TIMER_BASE  = 0x00008000,    32768   : Integer. Decl File  2, Line   31
                        TIME_BLK_COUNTER  = 0x00008000,    32768   : Integer. Decl File  2, Line   42
                          TIME_BLK_TIMER  = 0x00008002,    32770   : Integer. Decl File  2, Line   43
                     TIME_BLK_TIMER_CTRL  = 0x00008004,    32772   : Integer. Decl File  2, Line   44
           TIME_BLK_TIMER_CTRL_CLR_COUNT  = 0x00000002,        2   : Integer. Decl File  2, Line   47
           TIME_BLK_TIMER_CTRL_CLR_TIMER  = 0x00000004,        4   : Integer. Decl File  2, Line   48
            TIME_BLK_TIMER_CTRL_EN_TIMER  = 0x00000001,        1   : Integer. Decl File  2, Line   46
                               UART_BASE  = 0x00008010,    32784   : Integer. Decl File  2, Line   32
                            UPDATE_WORLD  = 0x0000009C,      156   : Integer. Decl File  1, Line  146
                                   USE_B  = 0x00005188,    20872   : Integer. Decl File  1, Line   15
                                 WORLD_A  = 0x00004000,    16384   : Integer. Decl File  1, Line   11
                             WORLD_A_ORG  = 0x00004023,    16419   : Integer. Decl File  1, Line   12
                                 WORLD_B  = 0x000048C4,    18628   : Integer. Decl File  1, Line   13
                             WORLD_B_ORG  = 0x000048E7,    18663   : Integer. Decl File  1, Line   14
